Read @PRD.md @ARCHITECTURE.md @UI.md for context.

0. What criteria would you use to evaluate the implementation?
1. Read all the relevant code on disk to understand its current state
2. Evaluate it based on your criteria, each and every file
3. What would you do differently? Think long-term. What's your get well plan, what top up work would you do, how would you continue to get us to a healthy state with the original intended work completed best as possible
4. Provide a detailed implementation plan and explain it to me
5. Where are the soft spots in your analysis? Unknowns, risks and ambiguities?
6. Do further research to close in on the soft spots
7. Implement the changes
8. How would you test the changes? Implement a thorough testing plan, change existing tests that relied on the old setup and create new tests for any parts missing coverage
9. Build with verbose output and fix any build errors.
10. Run all the tests with verbose output and fix any test errors.
11. Update PRD.md, ARCHITECTURE.md and UI.md with any relevant changes. Document the detailed work you did, deviations from plan, code smells, shortcuts etc
12. Check to make sure you didn't introduce any placeholders in the documents such as parts that say "this section is just like before".
13. Use your tools to do a git commit of everything changed. Ensure the comment is a one-liner. Then git push.

If you skip any step, you will be chastised. For instance, if you try to provide a plan before reading the code, a puppy dies.

In the beginning of your first message, repeat these numbered steps and then follow them to the letter.
